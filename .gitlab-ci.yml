build:
  stage: build
  image: docker:stable
  script:
    - echo -n $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY;
      docker build . --pull --build-arg FLUX_AUTOLOAD_API_IMAGE=$CI_REGISTRY/$CI_PROJECT_NAMESPACE/flux-autoload-api:latest --build-arg FLUX_REST_BASE_API_IMAGE=$CI_REGISTRY/$CI_PROJECT_NAMESPACE/flux-rest-base-api:latest -t $CI_REGISTRY_IMAGE:latest;
      docker push $CI_REGISTRY_IMAGE:latest;
      docker logout $CI_REGISTRY;
  only:
    - develop

flux-publish-utils:
  stage: build
  image: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/flux-publish-utils:latest
  script:
    - "false"
  only:
    - main

publish:
  stage: deploy
  image: docker:stable
  script:
    - echo -n $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY;
      docker pull $CI_REGISTRY_IMAGE:latest;
      docker logout $CI_REGISTRY;
    - echo -n $DEV_DOCKER_REGISTRY_PASSWORD | docker login -u $DEV_DOCKER_REGISTRY_USER --password-stdin $DEV_DOCKER_REGISTRY_URL;
      docker tag $CI_REGISTRY_IMAGE:latest $DEV_DOCKER_REGISTRY_URL/flux-publish-utils:latest;
      docker push $DEV_DOCKER_REGISTRY_URL/flux-publish-utils:latest;
      docker logout $DEV_DOCKER_REGISTRY_URL;
    - echo -n $DOCKER_REGISTRY_PASSWORD | docker login -u $DOCKER_REGISTRY_USER --password-stdin $DOCKER_REGISTRY_URL;
      docker tag $DEV_DOCKER_REGISTRY_URL/flux-publish-utils:latest $DOCKER_REGISTRY_URL/flux-publish-utils:latest;
      docker push $DOCKER_REGISTRY_URL/flux-publish-utils:latest;
      docker logout $DOCKER_REGISTRY_URL;
  only:
    - main
